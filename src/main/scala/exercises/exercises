  /*
   * 1. A greeting function (name, age) => "Hi, my name is $name and I am $age years old"
   * 2. Factorial function1 * 2 * 3 * .. * n
   * 3. A fibonacci function
   *    f(1) = 1
   *    f(2) = 1
   *    f(n) = f(n - 1) + f(n - 2)
   * 4. Test if a number is prime.
   *
   */

     /**
      * 1. concatenate a string n times
      * 2. isPrime function tail recurse
      * 3. Fibonacci function, tail recursive
      */

     /**
      * 1. Overload the + operator
      *    mary + "the rockstar" => new person "Mary (the rockstar)"
      * 2. Add an age to the Person class
      *    Add a unary + operator => new person with the age + 1
      *    +mary => mary with the age incrementer
      * 3. Add a "learns" method in the Person class => "Mary learns Scala"
      *    Add a learnsScala method, calls learns methods with "Scala"
      *    Use it in postfix notation
      *
      * 4. Overload the apply method
      *    mary.apply(2) => "Mary watched Inception 2 times"
      */